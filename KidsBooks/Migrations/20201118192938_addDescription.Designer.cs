// <auto-generated />
using System;
using KidsBooks.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KidsBooks.Migrations
{
    [DbContext(typeof(BookDbContext))]
    [Migration("20201118192938_addDescription")]
    partial class addDescription
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("KidsBooks.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date_Added")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Published")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author Name",
                            Date_Added = new DateTime(2020, 11, 18, 14, 29, 37, 541, DateTimeKind.Local).AddTicks(3356),
                            Date_Published = new DateTime(1889, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Book Name",
                            Publisher = "Publisher"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author Name Other",
                            Date_Added = new DateTime(2020, 11, 18, 14, 29, 37, 548, DateTimeKind.Local).AddTicks(1745),
                            Date_Published = new DateTime(1889, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Book Name other",
                            Publisher = "Publisher Other"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
